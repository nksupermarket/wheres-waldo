{"version":3,"sources":["components/NavBtn.js","components/LevelSelect/LevelSelectBGSlide.js","assets/characters/waldo.png","assets/characters/gf.png","assets/characters/dog.png","assets/characters/wizard.png","assets/characters/evil_waldo.png","assets/levels/opt_wheres-waldo-0.jpeg","assets/levels/opt_wheres-waldo-1.jpeg","assets/levels/opt_wheres-waldo-2.jpeg","assets/levels/opt_wheres-waldo-3.jpeg","assets/levels/opt_wheres-waldo-4.jpeg","assets/levels/opt_wheres-waldo-5.jpeg","assets/levels/opt_wheres-waldo-6.jpeg","assets/Wheres_Waldo_-_Logo.png","imgSrc.js","components/LevelSelect/LevelSelectBG.js","components/FoundCharImg.js","components/CharList.js","components/LevelSelect/LevelSelectSlide.js","logic/firebaseStuff.js","logic/time.js","components/LevelSelect/LevelSelectSliderFrame.js","components/LevelSelect/LevelSelection.js","components/Timer.js","components/Tooltip.js","components/Nav.js","components/InfoPopup.js","components/EndgamePopup.js","components/NewGamePopup.js","components/CharPopup.js","components/SelectionBox.js","components/SelectionPopup.js","components/Level.js","App.js","index.js"],"names":["NavBtn","React","forwardRef","ref","direction","onClick","style","id","className","type","displayName","LevelSelectBGSlide","bgImage","isVisible","useRef","div","charcImg","waldo","wenda","woof","wizard","odlaw","levels","img","levelOne","char","levelTwo","levelThree","levelFour","levelFive","levelSix","levelSeven","LevelSelectBG","slide","useSprings","length","opacity","config","friction","bgProps","bgPropsRef","useEffect","update","index","start","useBgFadeAnime","map","backgroundImage","FoundCharImg","name","src","alt","CharList","list","foundChars","includes","LevelSelectSlide","frameWidth","bestTime","charList","width","height","pullAnswers","level","db","getFirestore","getDoc","doc","answers","exists","data","Error","pullLeaderboard","leaderboard","updateLeaderboard","leaderboardRef","updateDoc","setDoc","millisecondsToTime","milli","rtrnEl","milliseconds","seconds","Math","floor","minutes","pad","num","slice","parseTime","time","split","initializeApp","apiKey","authDomain","projectId","forEach","answer","LevelSelectSliderFrame","slideProps","btnRef","setLevel","previewRef","useState","setFrameWidth","btnWidth","setBtnWidth","current","offsetWidth","window","addEventListener","setNewFrameWidth","removeEventListener","useMeasurements","setLeaderboard","transform","offset","to","offsetX","willChange","marginLeft","LevelSelection","setSlide","useSpring","slidePropsRef","prevSlide","nextSlide","prev","useSlide","Fragment","logo","getNavBtnStyle","cursor","pointerEvents","Timer","timer","setTimer","isGameOver","Date","now","startTime","setStartTime","isMounted","myTimer","elapsedTime","clearInterval","setInterval","Tooltip","close","tooltipRef","pxToShift","setPxToShift","trianglePos","top","left","e","stopPropagation","Nav","goBack","setIsGameOver","isTooltip","setIsTooltip","InfoPopup","msg","icon","EndgamePopup","setInfoPopupStatus","showNewGamePopup","place","setPlace","isError","setIsError","inputRef","getPlace","htmlFor","onSubmit","sortNewLeaderboard","findIndex","obj","isShow","message","username","value","push","sort","a","b","NewGamePopup","reset","CharPopup","chars","validate","SelectionBox","SelectionPopup","isPopup","position","hidePopup","modalStyle","charPopupStyle","setCharPopupStyle","modalRef","dropdownRef","y","offsetHeight","bottom","x","Level","ctnRef","mouseDown","mouseDownHandler","ctn","preventDefault","scrollTop","scrollLeft","clientX","clientY","mouseMoveHandler","dx","dy","mouseUpHandler","mouseLeaveHandler","useScroll","infoPopupStatus","clearTimeout","setTimeout","useInfoPopupStatus","setFoundChars","selectPopupStatus","setSelectPopupStatus","showSelectionPopup","hideSelectionPopup","popupPos","clickPos","useSelectPopupStatus","isEndgamePopup","setIsEndgamePopup","useIsGameOver","isNewGamePopup","setIsNewGamePopup","showCharPopup","selectionBoxRadius","isInBetween","onValidCheck","isValid","capitalizeFirstLetter","min","max","answerX","answerY","clickX","clickY","selectionRange","xMin","xMax","yMin","yMax","str","charAt","toUpperCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9496c3fd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavBtn = React.forwardRef(({ direction, onClick, style }, ref) => {\n  return (\n    <button\n      ref={ref}\n      id={`${direction}-nav-btn`}\n      className=\"nav-btn\"\n      type=\"button\"\n      onClick={onClick}\n      style={style}\n    >\n      <i></i>\n    </button>\n  );\n});\n\nNavBtn.propTypes = {\n  direction: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n};\n\nNavBtn.displayName = 'NavBtn';\n\nexport default NavBtn;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { animated } from 'react-spring';\n\nconst LevelSelectBGSlide = ({ style, bgImage, isVisible }) => {\n  const ref = useRef();\n\n  return (\n    <animated.div\n      ref={ref}\n      className={`slider-slide ${isVisible ? '' : 'lazy'}`}\n      style={{ ...style, ...bgImage }}\n    ></animated.div>\n  );\n};\n\nLevelSelectBGSlide.propTypes = {\n  style: PropTypes.object,\n  bgImage: PropTypes.object,\n  isVisible: PropTypes.bool,\n};\n\nexport default LevelSelectBGSlide;\n","export default __webpack_public_path__ + \"static/media/waldo.af4211d5.png\";","export default __webpack_public_path__ + \"static/media/gf.0cb89a79.png\";","export default __webpack_public_path__ + \"static/media/dog.556b0530.png\";","export default __webpack_public_path__ + \"static/media/wizard.e9baf93b.png\";","export default __webpack_public_path__ + \"static/media/evil_waldo.792cf427.png\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-0.220971a1.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-1.a7ef3e57.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-2.da0205ae.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-3.270d0889.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-4.9ad184f3.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-5.b3840372.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-6.c7a6bd8e.jpeg\";","export default __webpack_public_path__ + \"static/media/Wheres_Waldo_-_Logo.e6ffa93d.png\";","import waldo from './assets/characters/waldo.png';\nimport wenda from './assets/characters/gf.png';\nimport woof from './assets/characters/dog.png';\nimport wizard from './assets/characters/wizard.png';\nimport odlaw from './assets/characters/evil_waldo.png';\n\nimport levelOne from './assets/levels/opt_wheres-waldo-0.jpeg';\nimport levelTwo from './assets/levels/opt_wheres-waldo-1.jpeg';\nimport levelThree from './assets/levels/opt_wheres-waldo-2.jpeg';\nimport levelFour from './assets/levels/opt_wheres-waldo-3.jpeg';\nimport levelFive from './assets/levels/opt_wheres-waldo-4.jpeg';\nimport levelSix from './assets/levels/opt_wheres-waldo-5.jpeg';\nimport levelSeven from './assets/levels/opt_wheres-waldo-6.jpeg';\n\nimport logo from './assets/Wheres_Waldo_-_Logo.png';\n\nconst charcImg = {\n  waldo,\n  wenda,\n  woof,\n  wizard,\n  odlaw,\n};\n\nconst levels = [\n  { img: levelOne, char: ['waldo', 'wenda', 'odlaw'] },\n  { img: levelTwo, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelThree, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelFour, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelFive, char: ['waldo', 'wenda', 'wizard', 'odlaw'] },\n  { img: levelSix, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelSeven, char: ['waldo', 'wenda', 'wizard', 'odlaw'] },\n];\n\nexport { charcImg, levels, logo };\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSprings } from 'react-spring';\n\nimport LevelSelectBGSlide from './LevelSelectBGSlide';\n\nimport { levels } from '../../imgSrc';\n\nconst LevelSelectBG = ({ slide }) => {\n  const { bgProps } = useBgFadeAnime(slide);\n\n  return (\n    <div id=\"bg-frame\" className=\"frame\">\n      {bgProps.map((style, index) => {\n        const bgImage = { backgroundImage: `url(${levels[index].img})` };\n        return (\n          <LevelSelectBGSlide\n            key={index}\n            style={style}\n            bgImage={bgImage}\n            isVisible={\n              slide - 1 === index || slide === index || slide + 1 === index\n            }\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nLevelSelectBG.propTypes = {\n  slide: PropTypes.number,\n};\n\nexport default LevelSelectBG;\n\nfunction useBgFadeAnime(slide) {\n  const [bgProps, bgPropsRef] = useSprings(levels.length, () => ({\n    opacity: 0,\n    config: {\n      friction: 80,\n    },\n  }));\n\n  useEffect(() => {\n    bgPropsRef\n      .update((index) => {\n        if (index === slide) return { opacity: 1 };\n        return { opacity: 0 };\n      })\n      .start();\n  }, [slide, bgPropsRef]);\n\n  return { bgProps };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { charcImg } from '../imgSrc';\n\nconst FoundCharImg = ({ name, onClick }) => {\n  return (\n    <div className=\"char-ctn\" onClick={onClick}>\n      <i className=\"flaticon-draw-check-mark\"></i>\n      <img src={charcImg[name]} alt={name} />\n    </div>\n  );\n};\n\nFoundCharImg.propTypes = {\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default FoundCharImg;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FoundCharImg from './FoundCharImg';\n\nimport { charcImg } from '../imgSrc';\n\nconst CharList = ({ list, foundChars = [] }) => {\n  return (\n    <div className=\"char-list\">\n      {list.map((name) => {\n        if (foundChars.includes(name))\n          return <FoundCharImg key={name} name={name} />;\n        return <img key={name} src={charcImg[name]} alt={name} />;\n      })}\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  list: PropTypes.array,\n  foundChars: PropTypes.array,\n};\n\nexport default CharList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CharList from '../CharList';\n\nconst LevelSelectSlide = ({\n  frameWidth,\n  bestTime,\n  charList,\n  img,\n  isVisible,\n}) => {\n  return (\n    <div\n      className=\"slider-slide\"\n      style={{\n        width: `${frameWidth}px`,\n        height: 'auto',\n      }}\n    >\n      <p className=\"best-time\">Best time: {bestTime}</p>\n      <CharList list={charList} />\n      {isVisible && (\n        <img\n          src={img}\n          style={{ width: `${frameWidth}px` }}\n          className=\"preview-img\"\n        />\n      )}\n    </div>\n  );\n};\n\nLevelSelectSlide.propTypes = {\n  frameWidth: PropTypes.number,\n  bestTime: PropTypes.string,\n  charList: PropTypes.array,\n  img: PropTypes.string,\n  isVisible: PropTypes.bool,\n};\n\nexport default LevelSelectSlide;\n","import { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  getDoc,\n  updateDoc,\n} from 'firebase/firestore';\n\n(function init() {\n  const config = {\n    apiKey: 'AIzaSyDAj11m4V4uaxO8RRM-FKIe0bhSn4vS0W4',\n    authDomain: 'where-s-waldo-a6172.firebaseapp.com',\n    projectId: 'where-s-waldo-a6172',\n  };\n  initializeApp(config);\n\n  (async function uploadAnswers() {\n    const db = getFirestore();\n\n    const answer = await getDoc(doc(db, 'answers', '0'));\n    if (answer.exists()) return;\n\n    const answers = [\n      { waldo: [475, 1548], wenda: [2141, 1395], odlaw: [2446, 1504] },\n      {\n        odlaw: [323, 691],\n        wizard: [810, 688],\n        waldo: [1856, 736],\n        wenda: [2320, 792],\n        woof: [2042, 723],\n      },\n      {\n        waldo: [1217, 1237],\n        wenda: [885, 1027],\n        odlaw: [213, 1362],\n        wizard: [2345, 1153],\n        woof: [1764, 1795],\n      },\n      {\n        wizard: [209, 1448],\n        odlaw: [926, 1215],\n        wenda: [1471, 799],\n        waldo: [2564, 1405],\n        woof: [893, 1369],\n      },\n      {\n        waldo: [842, 655],\n        wenda: [757, 1381],\n        wizard: [1837, 1652],\n        odlaw: [1799, 1230],\n      },\n      {\n        wenda: [1799, 1303],\n        odlaw: [1671, 1549],\n        waldo: [2111, 832],\n        wizard: [2072, 1305],\n        woof: [1558, 1261],\n      },\n      {\n        waldo: [2676, 1288],\n        odlaw: [1981, 1088],\n        wizard: [755, 949],\n        wenda: [398, 1645],\n      },\n    ];\n\n    answers.forEach((answer, index) =>\n      setDoc(doc(db, 'answers', `${index}`), answer)\n    );\n  })();\n})();\n\nasync function pullAnswers(level) {\n  const db = getFirestore();\n\n  try {\n    const answers = await getDoc(doc(db, 'answers', `${level}`));\n    if (answers.exists()) return answers.data();\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function pullLeaderboard(level) {\n  const db = getFirestore();\n\n  try {\n    const leaderboard = await getDoc(doc(db, 'leaderboard', 'allLevels'));\n    if (!leaderboard.exists()) return;\n\n    if (level !== 0 && !level) return leaderboard.data();\n\n    return leaderboard.data()[level];\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function updateLeaderboard(level, leaderboard) {\n  const db = getFirestore();\n\n  try {\n    const leaderboardRef = doc(db, 'leaderboard', 'allLevels');\n    const allLeaderboard = await getDoc(leaderboardRef);\n\n    if (allLeaderboard.exists())\n      return updateDoc(leaderboardRef, {\n        [level]: leaderboard,\n      });\n\n    return setDoc(doc(db, 'leaderboard', 'allLevels'), {\n      [level]: leaderboard,\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport { pullAnswers, pullLeaderboard, updateLeaderboard };\n","import React from 'react';\n\nfunction millisecondsToTime(milli, rtrnEl = true) {\n  const milliseconds = milli % 1000;\n  const seconds = Math.floor((milli / 1000) % 60);\n  const minutes = Math.floor((milli / (60 * 1000)) % 60);\n  return rtrnEl ? (\n    <div>\n      <span className=\"num-timer\">{pad(minutes) + ':'}</span>\n      <span className=\"num-timer\">{pad(seconds) + ':'}</span>\n      <span className=\"num-timer ms-timer\">{pad(milliseconds, 3)}</span>\n    </div>\n  ) : (\n    pad(minutes) + ':' + pad(seconds) + ':' + pad(milliseconds, 3)\n  );\n\n  function pad(num, pad) {\n    pad = pad || 2;\n    return ('00' + num).slice(-pad);\n  }\n}\n\nfunction convertToMillsec(timer) {\n  const split = timer.split(':');\n  return +split[0] * 60000 + +split[1] * 1000 + +split[2];\n}\n\nfunction parseTime(time) {\n  const split = time.split(':');\n  if (split[0] === '00') return time.slice(3) + ' seconds';\n  return time + ' minutes';\n}\n\nexport { millisecondsToTime, convertToMillsec, parseTime };\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { animated } from 'react-spring';\n\nimport LevelSelectSlide from './LevelSelectSlide';\n\nimport { pullLeaderboard } from '../../logic/firebaseStuff';\nimport { millisecondsToTime, parseTime } from '../../logic/time';\n\nimport { levels } from '../../imgSrc';\n\nconst LevelSelectSliderFrame = ({ slide, slideProps, btnRef, setLevel }) => {\n  // get width of preview container so we know how big slide needs to be/how many px it needs to slide\n  const previewRef = useRef();\n\n  const { frameWidth, btnWidth } = useMeasurements(previewRef, btnRef);\n\n  const [leaderboard, setLeaderboard] = useState();\n  useEffect(async function () {\n    const leaderboard = await pullLeaderboard();\n    setLeaderboard(leaderboard);\n\n    return () => setLeaderboard();\n  }, []);\n\n  return (\n    <animated.div\n      ref={previewRef}\n      className=\"frame\"\n      onClick={() => setLevel(slide)}\n      style={{\n        transform: slideProps.offset.to(\n          (offsetX) => `translate3d(${offsetX * frameWidth}px, 0, 0)`\n        ),\n        willChange: 'transform',\n        marginLeft: `${btnWidth}px`,\n      }}\n    >\n      {levels.map((level, index) => {\n        const bestTime =\n          leaderboard && leaderboard[index]\n            ? parseTime(millisecondsToTime(leaderboard[index][0].time, false))\n            : '--:--:---';\n        return (\n          <LevelSelectSlide\n            key={index}\n            frameWidth={frameWidth}\n            bestTime={bestTime}\n            charList={level.char}\n            img={level.img}\n            isVisible={\n              slide - 1 === index || slide === index || slide + 1 === index\n            }\n          />\n        );\n      })}\n    </animated.div>\n  );\n};\n\nLevelSelectSliderFrame.propTypes = {\n  slide: PropTypes.number,\n  slideProps: PropTypes.object,\n  btnRef: PropTypes.object,\n  setLevel: PropTypes.func,\n};\n\nexport default LevelSelectSliderFrame;\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\nfunction useMeasurements(previewRef, btnRef) {\n  const [frameWidth, setFrameWidth] = useState();\n  const [btnWidth, setBtnWidth] = useState();\n\n  useEffect(() => {\n    setFrameWidth(\n      previewRef.current.offsetWidth - 2 * btnRef.current.offsetWidth\n    );\n    setBtnWidth(btnRef.current.offsetWidth);\n\n    window.addEventListener('resize', setNewFrameWidth);\n    return () => window.removeEventListener('resize', setNewFrameWidth);\n\n    function setNewFrameWidth() {\n      setFrameWidth(previewRef.current.offsetWidth);\n    }\n  });\n\n  return { frameWidth, btnWidth };\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSpring } from 'react-spring';\n\nimport NavBtn from '../NavBtn';\nimport LevelSelectBG from './LevelSelectBG';\n\nimport '../../styles/LevelSelection.css';\nimport { levels, logo } from '../../imgSrc';\nimport LevelSelectSliderFrame from './LevelSelectSliderFrame';\n\nconst LevelSelection = ({ setLevel }) => {\n  const { slide, slideProps, prevSlide, nextSlide } = useSlide();\n\n  const btnRef = useRef();\n\n  return (\n    <React.Fragment>\n      <LevelSelectBG slide={slide} />\n      <div id=\"level-selection-ctn\">\n        <img src={logo} alt=\"wheres waldo\" height=\"80px\" />\n        <p>Select a level</p>\n        <div className=\"slider\">\n          <NavBtn\n            direction=\"left\"\n            onClick={prevSlide}\n            style={getNavBtnStyle(slide, 'left')}\n          />\n          <LevelSelectSliderFrame\n            slide={slide}\n            slideProps={slideProps}\n            btnRef={btnRef}\n            setLevel={setLevel}\n          />\n          <NavBtn\n            ref={btnRef}\n            direction=\"right\"\n            onClick={nextSlide}\n            style={getNavBtnStyle(slide, 'right')}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLevelSelection.propTypes = {\n  setLevel: PropTypes.func,\n};\n\nexport default LevelSelection;\nexport { levels };\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\n\nfunction useSlide() {\n  const [slide, setSlide] = useState(0);\n\n  const [slideProps, slidePropsRef] = useSpring(() => ({\n    offset: 0,\n    config: {\n      friction: 40,\n    },\n  }));\n\n  useEffect(\n    () => slidePropsRef.update(() => ({ offset: 0 - slide })).start(),\n    [slide, slidePropsRef]\n  );\n\n  return { slide, slideProps, slidePropsRef, prevSlide, nextSlide };\n\n  function prevSlide() {\n    setSlide((prev) => {\n      if (prev === 0) return 0;\n      return --prev;\n    });\n  }\n\n  function nextSlide() {\n    setSlide((prev) => {\n      if (prev === levels.length - 1) return levels.length - 1;\n      return ++prev;\n    });\n  }\n}\n\n/// /////////////\n// helper funcs//\n/// /////////////\n\nfunction getNavBtnStyle(slide, direction) {\n  switch (direction) {\n    case 'left':\n      return slide === 0\n        ? {\n            opacity: 0.2,\n            cursor: 'default',\n            pointerEvents: 'none',\n          }\n        : {\n            opacity: 1,\n            cursor: 'pointer',\n            pointerEvents: 'all',\n          };\n\n    case 'right':\n      return slide === levels.length - 1\n        ? {\n            opacity: 0.2,\n            cursor: 'default',\n            pointerEvents: 'none',\n          }\n        : {\n            opacity: 1,\n            cursor: 'pointer',\n            pointerEvents: 'all',\n          };\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { millisecondsToTime } from '../logic/time';\n\nimport '../styles/Timer.css';\n\nconst Timer = ({ timer, setTimer, isGameOver }) => {\n  const [startTime, setStartTime] = useState(Date.now());\n\n  // need this otherwise, React performs state update when unmounted\n  let isMounted = false;\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  useEffect(() => {\n    isGameOver ? clearInterval(myTimer) : setInterval(myTimer, 50);\n    if (isGameOver) setStartTime(Date.now());\n\n    function myTimer() {\n      const elapsedTime = Date.now() - startTime;\n      if (!isMounted) return;\n      setTimer(elapsedTime);\n    }\n  });\n  return <div id=\"timer\">{millisecondsToTime(timer)}</div>;\n};\n\nTimer.displayName = Timer;\nexport default Timer;\n\nTimer.propTypes = {\n  timer: PropTypes.number,\n  setTimer: PropTypes.func,\n  isGameOver: PropTypes.bool,\n};\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TooltipStyles.css';\n\nconst Tooltip = ({ close }) => {\n  const tooltipRef = useRef(null);\n\n  const [pxToShift, setPxToShift] = useState('-32.1px');\n\n  useEffect(function positionTooltip() {\n    if (!tooltipRef.current) return;\n\n    const width = tooltipRef.current.offsetWidth;\n    const trianglePos = window.offsetWidth > 450 ? 15 : 35; // in %, the value of 'left' styling of tooltip:before aka the little triangle thing\n    const btnRadius = 15; // in px,\n\n    setPxToShift(`-${(width * trianglePos) / 100 - btnRadius}px`);\n  }, []);\n\n  useEffect(function closeTooltipEvent() {\n    window.addEventListener('click', close);\n\n    return () => window.removeEventListener('click', close);\n  });\n\n  return (\n    <div\n      className=\"tooltip\"\n      ref={tooltipRef}\n      style={{\n        top: '52px',\n        left: pxToShift,\n      }}\n      onClick={(e) => e.stopPropagation()}\n    >\n      Double click to make your selection\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  close: PropTypes.func,\n};\n\nexport default Tooltip;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from './Timer';\nimport Tooltip from './Tooltip';\nimport CharList from './CharList';\n\nimport '../styles/Nav.css';\n\nconst Nav = ({\n  goBack,\n  charList,\n  foundChars,\n  isGameOver,\n  setIsGameOver,\n  timer,\n  setTimer,\n}) => {\n  const [isTooltip, setIsTooltip] = useState(false);\n\n  useEffect(() => {\n    if (foundChars.length === charList.length) {\n      setIsGameOver(true);\n    }\n  });\n  return (\n    <nav id=\"nav\">\n      <div className=\"btn-ctn\">\n        <button type=\"button\" className=\"home-btn text-btn\" onClick={goBack}>\n          Go Back\n        </button>\n        <div className=\"tooltip-ctn\">\n          <button\n            type=\"button\"\n            className=\"help-btn icon-btn\"\n            onClick={() => setIsTooltip(true)}\n          >\n            ?\n          </button>\n          {isTooltip && <Tooltip close={() => setIsTooltip(false)} />}\n        </div>\n      </div>\n      <Timer timer={timer} setTimer={setTimer} isGameOver={isGameOver} />\n      <CharList list={charList} foundChars={foundChars} />\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  goBack: PropTypes.func,\n  charList: PropTypes.array,\n  foundChars: PropTypes.array,\n  isGameOver: PropTypes.bool,\n  setIsGameOver: PropTypes.func,\n  timer: PropTypes.number,\n  setTimer: PropTypes.func,\n};\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/InfoPopup.css';\n\nconst InfoPopup = ({ msg, icon }) => {\n  return (\n    <div id=\"valid-popup\">\n      <p className=\"valid-msg\">\n        {icon && <i className={icon}></i>} {msg}\n      </p>\n    </div>\n  );\n};\n\nInfoPopup.propTypes = {\n  msg: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default InfoPopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pullLeaderboard, updateLeaderboard } from '../logic/firebaseStuff';\nimport { millisecondsToTime, parseTime } from '../logic/time';\n\nimport '../styles/EndgamePopup.css';\n\nconst EndgamePopup = ({\n  level,\n  time,\n  close,\n  setInfoPopupStatus,\n  showNewGamePopup,\n}) => {\n  const [place, setPlace] = useState();\n  const [isError, setIsError] = useState(false);\n  const inputRef = useRef();\n\n  useEffect(async function () {\n    if (!isError)\n      setPlace(await getPlace(level, time, setInfoPopupStatus, setIsError));\n  });\n  return (\n    <div id=\"popup-modal\" className=\"modal\">\n      <div id=\"endgame-popup\">\n        <header>\n          <h2>You placed {place} in the world!</h2>\n        </header>\n        <hr />\n        <main>\n          <h3>You finished in {parseTime(millisecondsToTime(time, false))}</h3>\n          <p>Enter your name to save your score on the global leaderboard.</p>\n          <div className=\"input-field\">\n            <label htmlFor=\"name\">Username</label>\n            <input ref={inputRef} type=\"text\" name=\"name\" />\n          </div>\n        </main>\n        <footer>\n          <button\n            type=\"button\"\n            id=\"cancel-btn\"\n            className=\"text-btn\"\n            onClick={() => {\n              close();\n              showNewGamePopup();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            id=\"submit-btn\"\n            className=\"text-btn\"\n            onClick={() =>\n              onSubmit(\n                level,\n                time,\n                inputRef.current,\n                close,\n                setInfoPopupStatus,\n                setIsError,\n                showNewGamePopup\n              )\n            }\n          >\n            Submit\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nEndgamePopup.propTypes = {\n  level: PropTypes.number,\n  time: PropTypes.number,\n  close: PropTypes.func,\n  setInfoPopupStatus: PropTypes.func,\n  showNewGamePopup: PropTypes.func,\n};\n\nexport default EndgamePopup;\n\nasync function getPlace(level, time, setInfoPopupStatus, setIsError) {\n  try {\n    const leaderboard = await sortNewLeaderboard(level, time);\n    return leaderboard.findIndex((obj) => obj.time === time) + 1;\n  } catch (error) {\n    setIsError(true);\n    setInfoPopupStatus({\n      isShow: true,\n      msg: error.message,\n      icon: 'flaticon-close',\n    });\n    return '#';\n  }\n}\n\nasync function onSubmit(\n  level,\n  time,\n  inputRef,\n  close,\n  setInfoPopupStatus,\n  setIsError,\n  showNewGamePopup\n) {\n  const username = inputRef.value || 'Anonymous';\n  try {\n    const leaderboard = await sortNewLeaderboard(level, time, username);\n    await updateLeaderboard(level, leaderboard);\n    setIsError(false);\n    setInfoPopupStatus({\n      isShow: true,\n      msg: 'Time uploaded successfully',\n      icon: 'flaticon-draw-check-mark',\n    });\n    close();\n    showNewGamePopup();\n  } catch (error) {\n    setInfoPopupStatus({\n      isShow: true,\n      msg: error.message,\n      icon: 'flaticon-close',\n    });\n    throw new Error(error);\n  }\n}\n\nasync function sortNewLeaderboard(level, time, username) {\n  const leaderboard = (await pullLeaderboard(level)) || [];\n  username ? leaderboard.push({ username, time }) : leaderboard.push({ time });\n  return leaderboard.sort((a, b) => {\n    return a.time - b.time;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/NewGamePopup.css';\n\nconst NewGamePopup = ({ reset, goBack }) => {\n  return (\n    <div id=\"popup-modal\" className=\"modal\">\n      <div id=\"new-game-popup\" className=\"popup\">\n        <div className=\"btn-ctn\">\n          <button\n            type=\"button\"\n            id=\"cancel-btn\"\n            className=\"text-btn\"\n            onClick={goBack}\n          >\n            Level Select\n          </button>\n          <button\n            type=\"button\"\n            id=\"submit-btn\"\n            className=\"text-btn\"\n            onClick={reset}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nNewGamePopup.propTypes = {\n  reset: PropTypes.func,\n  goBack: PropTypes.func,\n};\n\nexport default NewGamePopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FoundCharImg from './FoundCharImg';\n\nimport '../styles/CharPopup.css';\n\nimport { charcImg } from '../imgSrc';\n\nconst CharPopup = React.forwardRef(\n  ({ style, foundChars, chars, validate }, ref) => {\n    return (\n      <div ref={ref} id=\"char-popup\" style={style}>\n        {chars.map((char) => {\n          if (foundChars.includes(char))\n            return (\n              <FoundCharImg\n                key={char}\n                name={char}\n                onClick={(e) => e.stopPropagation()}\n              />\n            );\n          return (\n            <div\n              className=\"char\"\n              key={char}\n              onClick={(e) => {\n                e.stopPropagation();\n                validate(char);\n              }}\n            >\n              <img src={charcImg[char]} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nCharPopup.propTypes = {\n  style: PropTypes.object,\n  foundChars: PropTypes.array,\n  chars: PropTypes.array,\n  validate: PropTypes.func,\n};\n\nCharPopup.displayName = CharPopup;\n\nexport default CharPopup;\n","import React from 'react';\n\nimport '../styles/SelectionBox.css';\n\nconst SelectionBox = () => {\n  return <div id=\"selection-box\"></div>;\n};\n\nexport default SelectionBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\n\nimport CharPopup from './CharPopup';\nimport SelectionBox from './SelectionBox';\n\nimport { levels } from '../imgSrc';\n\nconst SelectionPopup = ({\n  level,\n  foundChars,\n  isPopup,\n  position,\n  hidePopup,\n  validate,\n}) => {\n  const modalStyle = useSpring({ opacity: isPopup ? 1 : 0 });\n\n  const [charPopupStyle, setCharPopupStyle] = useState({});\n  const modalRef = useRef();\n  const dropdownRef = useRef();\n  useEffect(() => {\n    if (\n      position.y + dropdownRef.current.offsetHeight >\n      modalRef.current.offsetHeight\n    )\n      setCharPopupStyle((prev) => ({ ...prev, bottom: '110px' }));\n\n    if (\n      position.x + dropdownRef.current.offsetWidth >\n      modalRef.current.offsetWidth\n    )\n      setCharPopupStyle((prev) => ({ ...prev, left: '-50px' }));\n  }, [position]);\n\n  const selectionBoxRadius = 55;\n  return (\n    <animated.div\n      ref={modalRef}\n      className=\"modal\"\n      style={modalStyle}\n      onClick={hidePopup}\n    >\n      <div\n        id=\"selection\"\n        style={{\n          top: position.y - selectionBoxRadius,\n          left: position.x - selectionBoxRadius,\n        }}\n      >\n        <SelectionBox />\n        <CharPopup\n          ref={dropdownRef}\n          style={charPopupStyle}\n          foundChars={foundChars}\n          chars={levels[level].char}\n          validate={(char) => validate(char, selectionBoxRadius)}\n        />\n      </div>\n    </animated.div>\n  );\n};\n\nSelectionPopup.propTypes = {\n  level: PropTypes.number,\n  foundChars: PropTypes.array,\n  isPopup: PropTypes.bool,\n  position: PropTypes.object,\n  hidePopup: PropTypes.func,\n  validate: PropTypes.func,\n};\n\nexport default SelectionPopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Nav from './Nav';\n\nimport InfoPopup from './InfoPopup';\nimport EndgamePopup from './EndgamePopup';\nimport NewGamePopup from './NewGamePopup';\nimport SelectionPopup from './SelectionPopup';\n\nimport { pullAnswers } from '../logic/firebaseStuff.js';\n\nimport { levels } from '../imgSrc';\n\nimport '../styles/Level.css';\n\nconst Level = ({ level, goBack }) => {\n  const ctnRef = useRef();\n\n  const [timer, setTimer] = useState(0);\n\n  const {\n    mouseDownHandler,\n    mouseLeaveHandler,\n    mouseMoveHandler,\n    mouseUpHandler,\n  } = useScroll();\n  const [infoPopupStatus, setInfoPopupStatus] = useInfoPopupStatus();\n\n  const [foundChars, setFoundChars] = useState([]);\n\n  const { selectPopupStatus, showSelectionPopup, hideSelectionPopup } =\n    useSelectPopupStatus();\n  const { isPopup, popupPos, clickPos } = selectPopupStatus;\n\n  const [isEndgamePopup, setIsEndgamePopup] = useState(false);\n  const { isGameOver, setIsGameOver } = useIsGameOver(setIsEndgamePopup);\n\n  const [isNewGamePopup, setIsNewGamePopup] = useState(false);\n\n  useEffect(() => {\n    function showCharPopup(e) {\n      showSelectionPopup(e, ctnRef.current);\n    }\n\n    ctnRef.current.addEventListener('dblclick', showCharPopup);\n\n    if (isGameOver)\n      ctnRef.current.removeEventListener('dblclick', showCharPopup);\n  }, [isGameOver]);\n\n  useEffect(() => {\n    ctnRef.current.addEventListener('mousedown', (e) =>\n      mouseDownHandler(e, ctnRef.current)\n    );\n    ctnRef.current.addEventListener('mousemove', (e) =>\n      mouseMoveHandler(e, ctnRef.current)\n    );\n    ctnRef.current.addEventListener('mouseup', () =>\n      mouseUpHandler(ctnRef.current)\n    );\n    ctnRef.current.addEventListener('mouseleave', () =>\n      mouseLeaveHandler(ctnRef.current)\n    );\n  }, []);\n\n  function reset() {\n    setIsNewGamePopup(false);\n    setFoundChars([]);\n    setTimer(0);\n    setIsGameOver(false);\n  }\n\n  return (\n    <React.Fragment>\n      {isEndgamePopup && (\n        <EndgamePopup\n          level={level}\n          time={timer}\n          close={() => {\n            setIsEndgamePopup(false);\n          }}\n          setInfoPopupStatus={setInfoPopupStatus}\n          showNewGamePopup={() => setIsNewGamePopup(true)}\n        />\n      )}\n      {isNewGamePopup && <NewGamePopup goBack={goBack} reset={reset} />}\n      <Nav\n        goBack={goBack}\n        charList={levels[level].char}\n        foundChars={foundChars}\n        isGameOver={isGameOver}\n        setIsGameOver={setIsGameOver}\n        timer={timer}\n        setTimer={setTimer}\n      />\n      <div id=\"game-ctn\" ref={ctnRef}>\n        <img src={levels[level].img} />\n      </div>\n      {infoPopupStatus.isShow && (\n        <InfoPopup msg={infoPopupStatus.msg} icon={infoPopupStatus.icon} />\n      )}\n      {isPopup && (\n        <SelectionPopup\n          level={level}\n          foundChars={foundChars}\n          validate={(char, selectionBoxRadius) => {\n            validate(\n              level,\n              char,\n              foundChars,\n              clickPos,\n              selectionBoxRadius,\n              setInfoPopupStatus,\n              setFoundChars\n            );\n            hideSelectionPopup();\n          }}\n          isPopup={isPopup}\n          position={popupPos}\n          hidePopup={hideSelectionPopup}\n        />\n      )}\n    </React.Fragment>\n  );\n};\nLevel.propTypes = {\n  level: PropTypes.number,\n  goBack: PropTypes.func,\n};\n\nexport default Level;\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\n\nfunction useScroll() {\n  // const [position, setPosition] = useState({ top: 0, left: 0, x: 0, y: 0 });\n  const position = useRef({ top: 0, left: 0, x: 0, y: 0 });\n  const mouseDown = useRef(false);\n\n  return {\n    position,\n    mouseDownHandler: (e, ctn) => {\n      e.preventDefault();\n      // get current position\n      position.current = {\n        top: ctn.scrollTop,\n        left: ctn.scrollLeft,\n        x: e.clientX,\n        y: e.clientY,\n      };\n      ctn.style.cursor = 'grabbing';\n\n      mouseDown.current = true;\n    },\n    mouseMoveHandler: (e, ctn) => {\n      // see how far the mouse has moved\n      // use scrollLeft + scrollTop to move\n      e.preventDefault();\n      if (!mouseDown.current) return;\n\n      const dx = e.clientX - position.current.x;\n      const dy = e.clientY - position.current.y;\n      ctn.scrollLeft = position.current.left - dx;\n      ctn.scrollTop = position.current.top - dy;\n    },\n    mouseUpHandler: (ctn) => {\n      mouseDown.current = false;\n      ctn.style.cursor = 'grab';\n    },\n    mouseLeaveHandler: (ctn) => {\n      mouseDown.current = false;\n      ctn.style.cursor = 'grab';\n    },\n  };\n}\n\nfunction useSelectPopupStatus() {\n  const [selectPopupStatus, setSelectPopupStatus] = useState({});\n\n  return { selectPopupStatus, showSelectionPopup, hideSelectionPopup };\n\n  function showSelectionPopup(e, ctn) {\n    setSelectPopupStatus({\n      isPopup: true,\n      popupPos: { x: e.clientX, y: e.clientY },\n      clickPos: [ctn.scrollLeft + e.clientX, ctn.scrollTop + e.clientY],\n    });\n  }\n\n  function hideSelectionPopup() {\n    setSelectPopupStatus((prev) => ({ ...prev, isPopup: false }));\n  }\n}\n\nfunction useInfoPopupStatus() {\n  const [infoPopupStatus, setInfoPopupStatus] = useState({});\n\n  useEffect(() => {\n    if (infoPopupStatus.isShow) {\n      let timer = null;\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      timer = setTimeout(() => {\n        setInfoPopupStatus((prev) => ({ ...prev, isShow: false }));\n      }, 2000);\n    }\n  }, [infoPopupStatus]);\n\n  return [infoPopupStatus, setInfoPopupStatus];\n}\n\nasync function validate(\n  level,\n  char,\n  foundChars,\n  clickPos,\n  selectionBoxRadius,\n  setInfoPopupStatus,\n  setFoundChars\n) {\n  const answers = await pullAnswers(level);\n  const [answerX, answerY] = answers[char];\n  const [clickX, clickY] = clickPos;\n\n  const selectionRange = {\n    xMin: clickX - selectionBoxRadius,\n    xMax: clickX + selectionBoxRadius,\n    yMin: clickY - selectionBoxRadius,\n    yMax: clickY + selectionBoxRadius,\n  };\n\n  if (\n    isInBetween(selectionRange.xMin, selectionRange.xMax, answerX) &&\n    isInBetween(selectionRange.yMin, selectionRange.yMax, answerY)\n  )\n    return onValidCheck(true);\n\n  return onValidCheck(false);\n\n  // helper functions\n  function isInBetween(min, max, num) {\n    return num >= min && num <= max;\n  }\n\n  function onValidCheck(isValid) {\n    if (foundChars.includes(char)) isValid = 'found';\n    const name = capitalizeFirstLetter(char);\n    let msg;\n    let icon;\n    switch (isValid) {\n      case true:\n        msg = `You found ${name}!`;\n        icon = 'flaticon-draw-check-mark';\n        break;\n      case false:\n        msg = `Woops! ${name} isn't there. Try\n      again.`;\n        icon = 'flaticon-close';\n        break;\n      case 'found':\n        msg = `You've already found ${name}!`;\n        icon = '';\n        break;\n    }\n    setInfoPopupStatus({\n      isShow: true,\n      msg,\n      icon,\n    });\n    if (isValid && !foundChars.includes(char))\n      setFoundChars((prev) => [...prev, char]);\n  }\n}\n\nfunction useIsGameOver(setIsEndgamePopup) {\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  useEffect(() => {\n    if (isGameOver) {\n      setIsEndgamePopup(true);\n    }\n  }, [isGameOver]);\n\n  return { isGameOver, setIsGameOver };\n}\n\n/// /////////////\n// helper funcs//\n/// /////////////\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState } from 'react';\n\nimport LevelSelection from './components/LevelSelect/LevelSelection';\nimport Level from './components/Level';\n\nimport './globalStyles.css';\nimport './assets/icons/font/flaticon.css';\n\nfunction App() {\n  const [level, setLevel] = useState();\n\n  return (\n    <React.Fragment>\n      {!level && level !== 0 && <LevelSelection setLevel={setLevel} />}\n      {typeof level === 'number' && (\n        <Level level={level} goBack={() => setLevel()} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}